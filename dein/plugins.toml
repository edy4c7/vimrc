#[[plugins]]
#repo = 'Shougo/vimproc.vim'
#if = '!has("win32") && !has("nvim")'
#build = 'make'
#hook_add = "let g:vimproc_dll_path = expand('.cache/dein/repos/github.com/Shougo/vimproc.vim/lib/vimproc_linux64.so')"

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'tomasr/molokai'
hook_add = 'colorscheme molokai'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  autocmd vimenter * if argc() == 0 && !exists('s:std_in') | NERDTree | endif
  autocmd bufenter * if (winnr("$") == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree()) | q! | endif
  map <C-n> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html','php']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css','sass','scss','stylus']

[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = 'pug'

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'isRuslan/vim-es6'
on_ft = 'javascript'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'honza/vim-snippets'


#[[plugins]]
#repo = 'thinca/vim-quickrun'
#hook_add = '''
#	let g:quickrun_config = {
#	\   "_" : {
#	\       "outputter/buffer/split" : ":botright 8sp",
#	\       "outputter/buffer/close_on_empty" : 1
#	\   },
#	\}
 
#	nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
#'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# if = 'has("python3")'
# on_i = 1
# hook_add = '''
#   let g:deoplete#enable_at_startup = 1
#   
#   inoremap <silent><expr> <tab> pumvisible() ? "\<C-n>" :
#           \ neosnippet#expandable_or_jumpable() ? 
#           \ "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
#   inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
#   inoremap <expr><BS> deoplete#smart_close_popup()."\<BS>"
# '''

# [[plugins]]
# repo = 'zchee/deoplete-jedi'
# on_i = 1

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = 'mhartington/nvim-typescript'
if = 'has("nvim")'
depends = 'Shougo/deoplete.nvim'
on_ft = 'typescript'

# [[plugins]]
# repo = 'fishbullet/deoplete-ruby'
# depends = 'Shougo/deoplete.nvim'
# on_i = 1

[[plugins]]
repo = 'zchee/deoplete-docker'
on_i = 1

[[plugins]]
repo = 'wavded/vim-stylus'

# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# if = 'has("win32")'
# rev = 'next'
# build = 'powershell -executionpolicy bypass -File install.ps1'
# hook_add = '''
#   set hidden
# 
#   let g:LanguageClient_serverCommands = {
#     \ 'python': ['pyls'],
#     \ 'vue': ['vls'],
#   \ }
# '''
# 
# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# if = '!has("win32")'
# rev = 'next'
# build = 'bash install.sh'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  if executable('pyls')
    autocmd User lsp_setup call lsp#register_server({
    \ 'name': 'pyls',
    \ 'cmd': { server_info -> ['pyls'] },
    \ 'whitelist': ['python'],
    \ })
  endif
  setlocal omnifunc=lsp#complete
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
